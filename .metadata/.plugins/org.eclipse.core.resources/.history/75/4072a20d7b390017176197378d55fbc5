'''
Created on May 9, 2017

@author: 19augusthummert
'''
import pygame,sys, time, random, math
from MyLibrary import * 

class MySprite(pygame.sprite.Sprite):
    def __init__(self,target):
        pygame.sprite.Sprite.__init__(self)
        self.master_image = None
        self.frame = 0
        self.old_frame = -1
        self.frame_width = 1
        self.frame_height = 1
        self.first_frame = 0
        self.last_frame = 0
        self.columns = 1
        self.last_time = 0
        
    def _getx(self): return self.rect.x
    def _setx(self,value): self.rect.x = value
    x = property(_getx,_setx)
    
    def _gety(self): return self.rect.y
    def _sety(self,value): self.rect.y = value
    y = property(_gety,_sety)
    
    def _getpos(self): return self.rect.test_topleft
    def _setpos(self,pos): self.rect.topleft = pos
    position = property(_getpos,_setpos)
    
    def load(self, filename):
        self.master_image = pygame.image.load(filename).convert_alpha()
        
        rect = self.master_image.get_rect()
        self.last_frame = (rect.width//width) * (rect.height//height) - 1
        
    def update(self, current_time, rate = 30):
        
        if current_time > self.last_time + rate:
            self.frame += 1
            if self.frame > self.last_frame:
                self.frame = self.first_frame
            self.last_time = current_time
        
        if self.frame != self.old_frame:
            frame_x = (self.frame % self.columns) * self.frame_width
            frame_y = (self.frame // self.columns) * self.frame_height
            rect = Rect(frame_x,frame_y,self.frame_width, self.frame_height)
            self.image = self.master_image.subsurface(rect)
            self.old_frame = self.frame
            
    def __str__(self):
        return str(self.frame) + "," + str(self.first_frame) + \
            "," + str(self.last_frame) + "," + str(self.frame_width) + \
            "," + str(self.frame_height) + "," + str(self.columns) + \
            "," + str(self.rect)
def game_init():
    global timer, player_group, player, font1, screen, playerx
    
    pygame.init()
    screen = pygame.display.set_mode((1280,720))
    font1 = pygame.font.Font(None, 36)
    timer = pygame.time.Clock()
    
    player_group = pygame.sprite.Group()
    player = MySprite(screen)
    player.load("F5S2N.png")
    player.position = (playerx, 600)
 
playerx = 600
game_init()
game_over = False
score = 0
lives = 0
level = 0




while True:
    timer.tick(30)
    ticks = pygame.time.get_ticks()
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT: sys.exit()
    key = pygame.key.get_pressed()
    if key[pygame.K_ESCAPE]: sys.exit()
    elif key[K_RIGHT]:
        player.x += 5
    elif key[K_LEFT]:
        player.x -= 5
    
    if lives == 0:
        you_win = True
        game_over = True
    
    
    screen.fill((0,0,0))
    #screen.blit(space,(0,0))
    #print_text(font,350,90,"Lives Left: " + str(lives))
    
    if not game_over:
        player_group.update(ticks,50)
        
    
    player_group.draw(screen)
    print_text(font,350,560,"Press Space To Jump")
    
    if game_over:
        print_text(font,330,110,"G A M E  O V E R")
        if you_win:
            print_text(font,330,130,"YOU BEAT THE DRAGON")
        else:
            print_text(font,330,130,"THE DRAGON GOT YOU")
    pygame.display.update()